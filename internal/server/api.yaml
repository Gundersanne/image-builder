---
openapi: 3.0.1
info:
  version: "1"
  title: Image-builder service
  description: Service that relays image build requests
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /version:
    get:
      summary: get the service version
      description: "get the service version"
      operationId: getVersion
      responses:
        '200':
          description: a service version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /openapi.json:
    get:
      summary: get the openapi json specification
      operationId: getOpenapiJson
      tags:
        - meta
      responses:
        '200':
          description: returns this document
  /distributions:
    get:
      summary: get the available distributions
      operationId: getDistributions
      responses:
        '200':
          description: a list of available distributions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distributions'
  /compose/{composeId}:
    get:
      summary: get status of an image compose
      parameters:
        - in: path
          name: composeId
          schema:
            type: string
          required: true
          description: Id of compose status to get
      description: "status of an image compose"
      operationId: getComposeStatus
      responses:
        '200':
          description: compose status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeStatus'
  /compose:
    post:
      summary: compose image
      description: "compose image"
      operationId: composeImage
      requestBody:
        required: true
        description: details of image to be composed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComposeRequest"
      responses:
        '200':
          description: compose has started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposeResponse'

components:
  schemas:
    Version:
      required:
        - version
      properties:
        version:
          type: string
    Distributions:
      type: array
      items:
        $ref: '#/components/schemas/DistributionItem'
    DistributionItem:
      type: object
      required:
        - name
        - description
      properties:
        description:
          type: string
          example: 'Red Hat Enterprise Linux (RHEL) 8.2'
        name:
          type: string
          example: 'rhel-8'
    ComposeStatus:
      required:
        - status
      properties:
        status:
          type: string
    ComposeRequest:
      type: object
      required:
        - distribution
        - image_requests
      properties:
        distribution:
          type: string
          example: 'rhel-8'
        image_requests:
          type: array
          items:
            $ref: '#/components/schemas/ImageRequest'
        customizations:
            $ref: '#/components/schemas/Customizations'
    ImageRequest:
      required:
        - architecture
        - image_type
      properties:
        architecture:
          type: string
        image_type:
          type: string
        upload_requests:
          type: array
          items:
            $ref: '#/components/schemas/UploadRequest'
    ComposeResponse:
      required:
        - id
      properties:
        id:
          type: string
    UploadRequest:
      type: object
      required:
        - type
        - options
      properties:
        type:
          type: string
          enum: ['aws']
        options:
          $ref: '#/components/schemas/AWSUploadRequestOptions'
    AWSUploadRequestOptions:
      type: object
      required:
        - region
        - s3
        - ec2
      properties:
        region:
          type: string
          example: 'eu-west-1'
        s3:
          $ref: '#/components/schemas/AWSUploadRequestOptionsS3'
        ec2:
          $ref: '#/components/schemas/AWSUploadRequestOptionsEc2'
    AWSUploadRequestOptionsS3:
      type: object
      required:
        - access_key_id
        - secret_access_key
        - bucket
      properties:
        access_key_id:
          type: string
          example: 'AKIAIOSFODNN7EXAMPLE'
        secret_access_key:
          type: string
          format: password
          example: 'wJalrXqwdiqwdFEMI/K7qiwd/bPxRfiCYEXAMPLEKEY'
        bucket:
          type: string
          example: 'my-bucket'
    AWSUploadRequestOptionsEc2:
      type: object
      required:
        - access_key_id
        - secret_access_key
      properties:
        access_key_id:
          type: string
          example: 'AKIAIOSFODNN7EXAMPLE'
        secret_access_key:
          type: string
          format: password
          example: 'wJalrXqwdiqwdFEMI/K7qiwd/bPxRfiCYEXAMPLEKEY'
    Customizations:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
    Subscription:
      type: object
      required:
        - organization
        - activation-key
        - server-url
        - base-url
        - insights
      properties:
        organization:
          type: integer
          example: 2040324
        activation-key:
          type: string
          format: password
          example: 'my-secret-key'
        server-url:
          type: string
          example: 'subscription.rhsm.redhat.com'
        base-url:
          type: string
          format: url
          example: http://cdn.redhat.com/
        insights:
          type: boolean
          example: true
